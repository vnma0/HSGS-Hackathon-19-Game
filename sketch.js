let a = [],
  val = []; //m·∫£ng a ƒë·ªÉ l∆∞u s·ªë trong b·∫£ng v√† m·∫£ng val ƒë·ªÉ                         l∆∞u c√°c s·ªë s·∫Ω ƒë∆∞·ª£c ƒëi·ªÅn v√†o trong b·∫£ng
let dem1, sum, b = 0,
  c = 0;
let start, kcach1, kcach2, ktra;
let score = 0,
  times, realTime, fakescore = 0,
  waittime = 10;

function setup() {
  createCanvas(600, 450);
  frameRate(60);
  for (let i = 0; i < 4; i++) {
    a.push([]);
    for (let j = 0; j < 4; j++) {
      a[i].push('');
    }
  }
  for (let i = 0; i < 16; i++) {
    val.push();
  }

}

let state = 0; //c√°c tr·∫°ng th√°i c·ªßa tr√≤ ch∆°i
let x = 0,
  y = 0; // t·ªça ƒë·ªô c·ªßa √¥ ƒë∆∞·ª£c ch·ªçn trong b·∫£ng
//h√†m ƒë·ªÉ ƒëi·ªÅn s·ªë v√†o b·∫£ng
function keyTyped() {
  if ((48 <= keyCode && keyCode <= 57) || (96 <= keyCode && keyCode <= 105)) {
    a[x][y] = a[x][y] + str(key);
  }
}
//h√†m ƒë·ªÉ thao t√°c chu·ªôt trong tr√≤ ch∆°i
function mouseClicked() {
  //x√°c ƒë·ªãnh √¥ ƒë∆∞·ª£c ƒëi·ªÅn trong b·∫£ng
  if (mouseX >= 150 && mouseY >= 100 && mouseX < 450 && mouseY < 400 && state == 2) {
    x = int((mouseX - 150) / 75);
    y = int((mouseY - 100) / 75);
  } //n·∫øu click v√†o √¥ 'submit' s·∫Ω ch·∫°y h√†m ki·ªÉm tra 
  else if (mouseX >= 483 && mouseY >= 215 && mouseX < 557 && mouseY < 235 && state == 2) {
    check();
  } //n·∫øu click v√†o √¥ 'Ch∆°i' th√¨ s·∫Ω b·∫Øt ƒë·∫ßu v√†o ph·∫ßn ch∆°i
  else if (mouseX >= 265 && mouseY >= 230 && mouseX < 335 && mouseY < 260 && state == 0) {
    state = 1;
  } //n·∫øu click v√†o √¥ 'H∆∞·ªõng d·∫´n' th√¨ s·∫Ω chuy·ªÉn sang ph·∫ßn h∆∞·ªõng d·∫´n ch∆°i 
  else if (mouseX >= 215 && mouseY >= 300 && mouseX < 385 && mouseY < 330 && state == 0) {
    state = 5;
  }
}
//h√†m thi·∫øt l·∫≠p ph√≠m
function keyPressed() {
  //n·∫øu nh·∫•n ph√≠m 'Backspace' th√¨ s·∫Ω x√≥a ƒëi 1 k√≠ t·ª±
  if (keyCode == 8) {
    a[x][y] = a[x][y].substring(0, a[x][y].length - 1);
  } //n·∫øu nh·∫•n ph√≠m m≈©i t√™n s·∫Ω thay ƒë·ªïi ƒë∆∞·ª£c v·ªã tr√≠ ƒëi·ªÅn s·ªë trong b·∫£ng
  else if (keyCode == 37 && x > 0) {
    x--;
  } else if (keyCode == 39 && x <= 2) {
    x++;
  } else if (keyCode == 38 && y > 0) {
    y--;
  } else if (keyCode == 40 && y <= 2) {
    y++;
  }
}
//h√†m kh·ªüi t·∫°o b·∫£ng sau m·ªói l·∫ßn ch∆°i
function init() {
  for (let i = 0; i < 4; i++) {
    for (let j = 0; j < 4; j++) {
      a[i][j] = '';
    }
  }
}
//h√†m ki·ªÉm tra xem c√°ch ƒëi·ªÅn c√≥ th·ªèa m√£n hay kh√¥ng
function check() {
  dem1 = 0;
  for (let i = 0; i < 4; i++) {
    sum = 0;
    for (let j = 0; j < 4; j++) {
      sum = sum + int(a[i][j]);
    }
    if (sum == ktra) dem1++;
  }
  for (let j = 0; j < 4; j++) {
    sum = 0;
    for (let i = 0; i < 4; i++) {
      sum = sum + int(a[i][j]);
    }
    if (sum == ktra) dem1++;
  }
  sum = 0;
  for (let i = 0; i < 4; i++) {
    sum = sum + int(a[i][i]);
  }
  if (sum == ktra) dem1++;
  sum = 0;
  for (let i = 0; i < 4; i++) {
    sum = sum + int(a[i][3 - i]);
  }
  if (sum == ktra) dem1++;
  if (dem1 == 10) state = 3;
  else {
    state = 4;
  }
}

function draw() {
  background(220);
  textAlign(CENTER, CENTER);
  // m√†n h√¨nh ch√≠nh c·ªßa tr√≤ ch∆°i
  if (state == 0) {
    //kh·ªüi t·∫°o ƒëi·ªÉm s·ªë,th·ªùi gian
    score = 0;
    fakescore = 0;
    times = 0;
    textSize(50);
    //ph·∫ßn vi·∫øt t√™n game,t·∫°o n√∫t 'Ch∆°i' v√† n√∫t 'H∆∞·ªõng d·∫´n'
    stroke('black');
    fill('green');
    text("NG√îI", 100, 100);
    fill('red');
    text("NH√Ä", 235, 100);
    fill('yellow');
    text("TO√ÅN", 375, 100);
    fill('blue');
    text("H·ªåC", 520, 100);
    circle(100, 300, 100);
    fill('red');
    square(450, 250, 100);
    fill('black');
    textSize(30);
    noStroke();
    if (mouseX >= 265 && mouseY >= 230 && mouseX < 335 && mouseY < 260) {
      stroke('grey');
    }
    fill('white');
    rect(265, 230, 70, 30);
    fill('black');
    text("Ch∆°i", 300, 250);
    noStroke();
    if (mouseX >= 215 && mouseY >= 300 && mouseX < 385 && mouseY < 330) {
      stroke('grey');
    }
    fill('white');
    rect(215, 300, 170, 30);
    fill('black');
    text("H∆∞·ªõng d·∫´n", 300, 320);
  }
  //m√†n h√¨nh ch·ªù ƒë·ªÉ chu·∫©n b·ªã v√†o ch∆°i
  if (state == 1) {
    // ƒë√¢y l√† ph·∫ßn ƒë·ªÉ thi·∫øt l·∫≠p m·∫£ng val
    //bi·∫øn b v√† c ƒë∆∞·ª£c d√πng ƒë·ªÉ ngƒÉn kh√¥ng cho random ch·∫°y nhi·ªÅu l·∫ßn
    if (b == 0) {
      start = int(random(100));
      kcach1 = int(random(250));
      kcach2 = int(random(250));
      b++;
    }
    val[0] = start;
    for (let i = 1; i < 16; i++) {
      if (i % 4 == 0) val[i] = val[i - 4] + kcach2;
      else val[i] = val[i - 1] + kcach1;
    }
    ktra = val[0] + val[7] + val[11] + val[12];
    if (c == 0) {
      val = shuffle(val);
      c++;
    }
    //ƒë√¢y l√† ph·∫ßn ƒë·ªÉ thi·∫øt l·∫≠p th·ªùi gian ch·ªù (waittime) v√† ƒëi·ªÉm s·ªë
    fakescore = score;
    init();
    realTime = 120;
    if (times < 50) times++;
    else if (times == 50) {
      waittime--;
      times = 0;
    }
    if (waittime == 0) state = 2;
    //n·∫øu nh·∫•n ph√≠m 'S' s·∫Ω chuy·ªÉn sang m√†n h√¨nh ch∆°i
    if (keyIsPressed) {
      if (keyIsDown(83)) {
        state = 2;
      }
    }
    //ph·∫ßn vi·∫øt ƒë·ªÅ v√† hi·ªÉn th·ªã th·ªùi gian ch·ªù
    textSize(20);
    text("H√£y ƒëi·ªÅn c√°c s·ªë sau v√†o b·∫£ng sao cho t·ªïng c√°c s·ªë ·ªü m·ªói h√†ng", 300, 20);
    text("ngang,d·ªçc v√† ch√©o ƒë·ªÅu b·∫±ng " + ktra + ".", 300, 40);
    textSize(15);
    text(val, 300, 70);
    fill('white');
    stroke('black');
    square(150, 100, 300);
    for (let i = 0; i < 4; i++) {
      for (let j = 0; j < 4; j++) {
        square(150 + i * 75, 100 + j * 75, 75);
      }
    }
    textSize(20);
    fill('green');
    noStroke();
    text("Game s·∫Ω b·∫Øt ƒë·∫ßu sau: " + waittime + " .Ho·∫∑c nh·∫•n 'S' ƒë·ªÉ ch∆°i lu√¥n", 300, 430);
    fill('black');

  }
  //ph·∫ßn m√†n h√¨nh ch∆°i
  if (state == 2) {
    waittime = 10; //ƒë·∫∑t l·∫°i waittime cho l∆∞·ª£t ch∆°i sau
    //c√†i ƒë·∫∑t th·ªùi gian cho m√†n ch∆°i (120s)
    if (times < 50) times++;
    else if (times == 50) {
      realTime--;
      times = 0;
    }
    if (realTime == 0) {
      state = 4;
    }
    //ph·∫ßn t·∫°o b·∫£ng,hi·ªÉn th·ªã ƒëi·ªÉm s·ªë v√† th·ªùi gian
    textSize(15);
    fill('black');
    noStroke();
    text(val, 300, 70);
    textSize(20);
    text("Score:", 60, 160);
    text(score, 60, 190);
    textSize(25);
    text("Goal: " + ktra, 300, 30);
    textSize(20);
    text("Time left:", 60, 250);
    text(realTime, 60, 280);
    fill('white');
    noStroke();
    square(150, 100, 300);
    for (let i = 0; i < 4; i++) {
      for (let j = 0; j < 4; j++) {
        if (i == x && j == y) {
          strokeWeight(4);
          stroke('blue');
        } else {
          strokeWeight(1);
          stroke('black');
        }
        square(150 + i * 75, 100 + j * 75, 75);
        fill('black');
        noStroke();
        textSize(20);
        text(a[i][j], 150 + i * 75, 100 + j * 75, 75, 75);
        //ki·ªÉm tra n·∫øu s·ªë ƒë∆∞·ª£c ƒëi·ªÅn kh√¥ng c√≥ trong c√°c s·ªë ƒë√£ cho th√¨ s·∫Ω chuy·ªÉn sang m√†u ƒë·ªè
        if (a[i][j].length > 0) {
          dem = 0;
          for (let k = 0; k < 16; k++) {
            if (int(a[i][j]) == val[k]) {
              dem++;
            }
          }
          if (dem == 0) {
            fill('red');
            square(150 + i * 75, 100 + j * 75, 75);
            fill('black');
            textSize(20);
            text(a[i][j], 150 + i * 75, 100 + j * 75, 75, 75);
            fill('white');
          } else fill('white');
        } else fill('white');
      }
    }
    noStroke();
    //ph·∫ßn t·∫°o n√∫t 'Submit'
    if (mouseX >= 483 && mouseY >= 215 && mouseX < 557 && mouseY < 235) {
      stroke('grey');
    }
    rect(483, 210, 75, 30);
    fill('black');
    text("Submit", 520, 225);
    fill('white');
    //n·∫øu nh·∫•n n√∫t 'R' s·∫Ω ch∆°i l·∫°i m√†n ƒë√≥
    if (keyIsPressed) {
      if (keyIsDown(82)) state = 1;
    }
  }
  //ph·∫ßn hi·ªáu ·ª©ng khi qua m√†n
  if (state == 3) {
    textSize(30);
    fill('green');
    stroke('black');
    text("Ch√∫c m·ª´ng! B·∫°n ƒë√£ qua m√†n! üòä", 300, 200);
    textSize(19);
    fill('black');
    noStroke();
    text("Nh·∫•n 'Z' ƒë·ªÉ ch∆°i ti·∫øp", 300, 260);
    b = 0;
    c = 0;
    stroke('black');
    fill('blue');
    circle(100, 300, 100);
    fill('red');
    square(450, 250, 100);
    score = fakescore + 1; //c·ªông 1 ƒëi·ªÉm khi qua m√†n
    //n·∫øu nh·∫•n 'Z' s·∫Ω chuy·ªÉn qua m√†n ti·∫øp theo
    if (keyIsPressed) {
      if (keyIsDown(90)) state = 1;
    }
  }
  //ph·∫ßn hi·ªáu ·ª©ng khi thua cu·ªôc
  if (state == 4) {
    textSize(30);
    fill('red');
    stroke('black');
    text("B·∫°n ƒë√£ thua cu·ªôc üò¢", 300, 200);
    textSize(19);
    fill('black');
    noStroke();
    text("Score: " + score, 300, 260); //hi·ªÉn th·ªã ƒëi·ªÉm s·ªë ƒë√£ ƒë·∫°t ƒë∆∞·ª£c
    text("Nh·∫•n 'R' ƒë·ªÉ th·ª≠ l·∫°i", 300, 300);
    b = 0;
    c = 0;
    stroke('black');
    fill('blue');
    circle(100, 300, 100);
    fill('red');
    square(450, 250, 100);
    //Nh·∫•n n√∫t 'R' ƒë·ªÉ quay l·∫°i m√†n h√¨nh ch√≠nh
    if (keyIsPressed) {
      if (keyIsDown(82)) state = 0;
    }
  }
  //ph·∫ßn h∆∞·ªõng d·∫´n ch∆°i
  if (state == 5) {
    //hi·ªÉn th·ªã ƒëo·∫°n h∆∞·ªõng d·∫´n
    textSize(40);
    text("H∆∞·ªõng d·∫´n", 300, 30);
    line(200, 50, 400, 50);
    textSize(20);
    text("-Nhi·ªám v·ª• c·ªßa b·∫°n l√† ph·∫£i ƒëi·ªÅn c√°c s·ªë ƒë·ªÅ b√†i cho v√†o b·∫£ng 4x4", 300, 70);
    text("sao cho th·ªèa m√£n v·ªõi y√™u c·∫ßu c·ªßa ƒë·ªÅ b√†i.ƒê·ªÉ ƒëi·ªÅn s·ªë b·∫°n ch·ªâ c·∫ßn", 300, 95);
    text("click v√†o √¥ tr·ªëng tr√™n b·∫£ng sau ƒë√≥ ƒëi·ªÅn s·ªë m√† b·∫°n mu·ªën.L∆∞u √Ω l√†", 300, 120);
    text("m·ªói s·ªë ch·ªâ ƒë∆∞·ª£c ƒëi·ªÅn 1 l·∫ßn.Khi ƒë√£ ch·∫Øc ch·∫Øn v·ªÅ k·∫øt qu·∫£, b·∫°n c√≥ ", 300, 145);
    text("th·ªÉ nh·∫•n n√∫t 'Submit' b√™n ph·∫£i ƒë·ªÉ n·ªôp b√†i.B·∫°n c√≥ 120s cho m·ªói  ", 300, 170);
    textAlign(LEFT, CENTER);
    text("m√†n ch∆°i.", 17, 195);
    textAlign(CENTER, CENTER);
    text("-N·∫øu b·∫°n ƒëi·ªÅn ƒë√∫ng v√† ho√†n th√†nh trong th·ªùi gian quy ƒë·ªãnh th√¨", 300, 230);
    text("b·∫°n s·∫Ω th·∫Øng v√† qua m√†n ch∆°i ti·∫øp theo. Ng∆∞·ª£c l·∫°i b·∫°n s·∫Ω thua.", 300, 255);
    text("-B·∫°n c√≥ th·ªÉ quay tr·ªü v·ªÅ m√†n h√¨nh ch√≠nh b·∫•t c·ª© l√∫c n√†o b·∫±ng ", 300, 290);
    textAlign(LEFT, CENTER);
    text("c√°ch nh·∫•n ph√≠m 'B'.", 15, 315);
    textAlign(CENTER, CENTER);
    fill('green');
    text("So easy, right üòÄ", 300, 350);
    text("Nh·∫•n 'R' ƒë·ªÉ quay tr·ªü l·∫°i", 300, 390);
    fill('black');
    //Nh·∫•n n√∫t 'R' ƒë·ªÉ quay l·∫°i m√†n h√¨nh ch√≠nh
    if (keyIsPressed) {
      if (keyIsDown(82)) state = 0;
    }
  }

}